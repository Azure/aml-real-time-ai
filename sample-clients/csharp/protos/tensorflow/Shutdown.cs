// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: shutdown.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Aml.Fpga {

  /// <summary>Holder for reflection information generated from shutdown.proto</summary>
  public static partial class ShutdownReflection {

    #region Descriptor
    /// <summary>File descriptor for shutdown.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ShutdownReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5zaHV0ZG93bi5wcm90bxIIYW1sLmZwZ2EiJwoPU2h1dGRvd25SZXF1ZXN0",
            "EhQKDGZvcmNlU2Vjb25kcxgBIAEoBSKLAQoQU2h1dGRvd25SZXNwb25zZRI5",
            "CgZzdGF0dXMYASABKA4yKS5hbWwuZnBnYS5TaHV0ZG93blJlc3BvbnNlLlNo",
            "dXRkb3duU3RhdHVzIjwKDlNodXRkb3duU3RhdHVzEgsKB1VOS05PV04QABIM",
            "CghTVE9QUElORxABEg8KC0NBTk5PVF9TVE9QEAIyVAoPU2h1dGRvd25TZXJ2",
            "aWNlEkEKCFNodXRkb3duEhkuYW1sLmZwZ2EuU2h1dGRvd25SZXF1ZXN0Ghou",
            "YW1sLmZwZ2EuU2h1dGRvd25SZXNwb25zZUID+AEBYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Aml.Fpga.ShutdownRequest), global::Aml.Fpga.ShutdownRequest.Parser, new[]{ "ForceSeconds" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Aml.Fpga.ShutdownResponse), global::Aml.Fpga.ShutdownResponse.Parser, new[]{ "Status" }, null, new[]{ typeof(global::Aml.Fpga.ShutdownResponse.Types.ShutdownStatus) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  public sealed partial class ShutdownRequest : pb::IMessage<ShutdownRequest> {
    private static readonly pb::MessageParser<ShutdownRequest> _parser = new pb::MessageParser<ShutdownRequest>(() => new ShutdownRequest());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aml.Fpga.ShutdownReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest(ShutdownRequest other) : this() {
      forceSeconds_ = other.forceSeconds_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownRequest Clone() {
      return new ShutdownRequest(this);
    }

    /// <summary>Field number for the "forceSeconds" field.</summary>
    public const int ForceSecondsFieldNumber = 1;
    private int forceSeconds_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int ForceSeconds {
      get { return forceSeconds_; }
      set {
        forceSeconds_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ForceSeconds != other.ForceSeconds) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ForceSeconds != 0) hash ^= ForceSeconds.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ForceSeconds != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(ForceSeconds);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ForceSeconds != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ForceSeconds);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownRequest other) {
      if (other == null) {
        return;
      }
      if (other.ForceSeconds != 0) {
        ForceSeconds = other.ForceSeconds;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            ForceSeconds = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class ShutdownResponse : pb::IMessage<ShutdownResponse> {
    private static readonly pb::MessageParser<ShutdownResponse> _parser = new pb::MessageParser<ShutdownResponse>(() => new ShutdownResponse());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ShutdownResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Aml.Fpga.ShutdownReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse(ShutdownResponse other) : this() {
      status_ = other.status_;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ShutdownResponse Clone() {
      return new ShutdownResponse(this);
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 1;
    private global::Aml.Fpga.ShutdownResponse.Types.ShutdownStatus status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Aml.Fpga.ShutdownResponse.Types.ShutdownStatus Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ShutdownResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ShutdownResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Status != other.Status) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Status != 0) hash ^= Status.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Status != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Status);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ShutdownResponse other) {
      if (other == null) {
        return;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            status_ = (global::Aml.Fpga.ShutdownResponse.Types.ShutdownStatus) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ShutdownResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ShutdownStatus {
        [pbr::OriginalName("UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("STOPPING")] Stopping = 1,
        [pbr::OriginalName("CANNOT_STOP")] CannotStop = 2,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
